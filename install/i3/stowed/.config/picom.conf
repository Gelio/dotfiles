#################################
#             Shadows           #
#################################

shadow = true;
shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "_GTK_FRAME_EXTENTS@:c",
  "class_g = 'Peek'",

  # Zoom
  # https://wiki.archlinux.org/title/Picom#Zoom_screen_sharing
  "name = 'cpt_frame_window'",
  "name = 'cpt_frame_xcb_window'",
  "class_g ?= 'zoom'",
  "name = 'as_toolbar'"
];

#################################
#           Fading              #
#################################

fading = true;
fade-delta = 4;

#################################
#   Transparency / Opacity      #
#################################

frame-opacity = 0.7;

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
opacity-rule = [
  "95:class_g = 'kitty'"
]


#################################
#           Corners             #
#################################

# Sets the radius of rounded window corners. When > 0, the compositor will
# round the corners of windows. Does not interact well with
# `transparent-clipping`.
corner-radius = 0;

# Exclude conditions for rounded corners.
rounded-corners-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'"
];


#################################
#     Background-Blurring       #
#################################


blur-background = true;
blur-background-frame = true;
blur-background-fixed = true;
blur-background-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'",
    "class_g = 'Peek'",

    # Zoom
    # https://wiki.archlinux.org/title/Picom#Zoom_screen_sharing
    "class_g ?= 'zoom'",
    "name = 'as_toolbar'"
];
blur-method = "dual_kawase";
blur-strength = 5;

#################################
#       General Settings        #
#################################

backend = "glx"
vsync = true;

# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.
# dbus = false

mark-wmwin-focused = true;
mark-ovredir-focused = true;
detect-rounded-corners = true;
detect-client-opacity = true;

detect-transient = true;
detect-client-leader = true;

# Resize damaged region by a specific number of pixels.
# A positive value enlarges it while a negative one shrinks it.
# If the value is positive, those additional pixels will not be actually painted
# to screen, only used in blur calculation, and such. (Due to technical limitations,
# with use-damage, those pixels will still be incorrectly painted to screen.)
# Primarily used to fix the line corruption issues of blur,
# in which case you should use the blur radius value here
# (e.g. with a 3x3 kernel, you should use `--resize-damage 1`,
# with a 5x5 one you use `--resize-damage 2`, and so on).
# May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.
#
# resize-damage = 1

use-damage = true;
log-level = "warn";

wintypes:
{
  dock = { shadow = false; }
  dnd = { shadow = false; }
  popup_menu = { fade = false; }
  toolbar = { fade = false; }
  menu = { fade = false; }
};
